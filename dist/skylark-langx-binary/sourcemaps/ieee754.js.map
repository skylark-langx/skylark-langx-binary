{"version":3,"sources":["ieee754.js"],"names":["define","exports","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","i","d","s","NaN","Infinity","Math","pow","write","value","rt","abs","isNaN","floor","log","LN2","c"],"mappings":";;;;;;;AAAAA,OAAO,GAAG,WACR,aACA,IAAIC,QAAU,CAEdC,KAAe,SAAUC,EAAQC,EAAQC,EAAMC,EAAMC,GACnD,IAAIC,EAAGC,EACHC,EAAiB,EAATH,EAAcD,EAAO,EAC7BK,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,EAAQ,CAAC,EACTC,EAAIT,EAAQE,EAAS,EAAK,EAC1BQ,EAAIV,EAAO,CAAC,EAAI,EAChBW,EAAIb,EAAOC,EAASU,GAOxB,IALAA,GAAKC,EAELP,EAAIQ,GAAM,GAAK,CAAEH,GAAU,EAC3BG,IAAM,CAAEH,EACRA,GAASH,EACM,EAARG,EAAWL,EAAS,IAAJA,EAAWL,EAAOC,EAASU,GAAIA,GAAKC,EAAGF,GAAS,GAKvE,IAHAJ,EAAID,GAAM,GAAK,CAAEK,GAAU,EAC3BL,IAAM,CAAEK,EACRA,GAASP,EACM,EAARO,EAAWJ,EAAS,IAAJA,EAAWN,EAAOC,EAASU,GAAIA,GAAKC,EAAGF,GAAS,GAEvE,GAAU,IAANL,EACFA,EAAI,EAAII,MACH,CAAA,GAAIJ,IAAMG,EACf,OAAOF,EAAIQ,IAAsBC,EAAAA,GAAdF,EAAI,CAAC,EAAI,GAE5BP,GAAQU,KAAKC,IAAI,EAAGd,CAAI,EACxBE,GAAQI,CACV,CACA,OAAQI,EAAI,CAAC,EAAI,GAAKP,EAAIU,KAAKC,IAAI,EAAGZ,EAAIF,CAAI,CAChD,EAEAe,MAAgB,SAAUlB,EAAQmB,EAAOlB,EAAQC,EAAMC,EAAMC,GAC3D,IAAIC,EAAGC,EACHC,EAAiB,EAATH,EAAcD,EAAO,EAC7BK,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBY,EAAe,KAATjB,EAAca,KAAKC,IAAI,EAAG,CAAC,EAAE,EAAID,KAAKC,IAAI,EAAG,CAAC,EAAE,EAAI,EAC1DN,EAAIT,EAAO,EAAKE,EAAS,EACzBQ,EAAIV,EAAO,EAAI,CAAC,EAChBW,EAAIM,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQH,KAAKK,IAAIF,CAAK,EAElBG,MAAMH,CAAK,GAAKA,IAAUJ,EAAAA,GAC5BT,EAAIgB,MAAMH,CAAK,EAAI,EAAI,EACvBd,EAAIG,IAEJH,EAAIW,KAAKO,MAAMP,KAAKQ,IAAIL,CAAK,EAAIH,KAAKS,GAAG,EACrCN,GAASO,EAAIV,KAAKC,IAAI,EAAG,CAACZ,CAAC,GAAK,IAClCA,CAAC,GACDqB,GAAK,GAOU,IAJfP,GADe,GAAbd,EAAII,EACGW,EAAKM,EAELN,EAAKJ,KAAKC,IAAI,EAAG,EAAIR,CAAK,GAEzBiB,IACVrB,CAAC,GACDqB,GAAK,GAGUlB,GAAbH,EAAII,GACNH,EAAI,EACJD,EAAIG,GACkB,GAAbH,EAAII,GACbH,GAAMa,EAAQO,EAAK,GAAKV,KAAKC,IAAI,EAAGd,CAAI,EACxCE,GAAQI,IAERH,EAAIa,EAAQH,KAAKC,IAAI,EAAGR,EAAQ,CAAC,EAAIO,KAAKC,IAAI,EAAGd,CAAI,EACrDE,EAAI,IAIO,GAARF,EAAWH,EAAOC,EAASU,GAAS,IAAJL,EAAUK,GAAKC,EAAGN,GAAK,IAAKH,GAAQ,GAI3E,IAFAE,EAAKA,GAAKF,EAAQG,EAClBC,GAAQJ,EACM,EAAPI,EAAUP,EAAOC,EAASU,GAAS,IAAJN,EAAUM,GAAKC,EAAGP,GAAK,IAAKE,GAAQ,GAE1EP,EAAOC,EAASU,EAAIC,IAAU,IAAJC,CAC5B,CArFe,EAuFf,OAAOf,OACT,CAAC","file":"../ieee754.js","sourcesContent":["define([],function(){\r\n  'use strict'\r\n  var exports = {};\r\n\r\n  exports.read = function (buffer, offset, isLE, mLen, nBytes) {\r\n    var e, m\r\n    var eLen = (nBytes * 8) - mLen - 1\r\n    var eMax = (1 << eLen) - 1\r\n    var eBias = eMax >> 1\r\n    var nBits = -7\r\n    var i = isLE ? (nBytes - 1) : 0\r\n    var d = isLE ? -1 : 1\r\n    var s = buffer[offset + i]\r\n\r\n    i += d\r\n\r\n    e = s & ((1 << (-nBits)) - 1)\r\n    s >>= (-nBits)\r\n    nBits += eLen\r\n    for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n    m = e & ((1 << (-nBits)) - 1)\r\n    e >>= (-nBits)\r\n    nBits += mLen\r\n    for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n    if (e === 0) {\r\n      e = 1 - eBias\r\n    } else if (e === eMax) {\r\n      return m ? NaN : ((s ? -1 : 1) * Infinity)\r\n    } else {\r\n      m = m + Math.pow(2, mLen)\r\n      e = e - eBias\r\n    }\r\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\r\n  }\r\n\r\n  exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\r\n    var e, m, c\r\n    var eLen = (nBytes * 8) - mLen - 1\r\n    var eMax = (1 << eLen) - 1\r\n    var eBias = eMax >> 1\r\n    var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\r\n    var i = isLE ? 0 : (nBytes - 1)\r\n    var d = isLE ? 1 : -1\r\n    var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\r\n\r\n    value = Math.abs(value)\r\n\r\n    if (isNaN(value) || value === Infinity) {\r\n      m = isNaN(value) ? 1 : 0\r\n      e = eMax\r\n    } else {\r\n      e = Math.floor(Math.log(value) / Math.LN2)\r\n      if (value * (c = Math.pow(2, -e)) < 1) {\r\n        e--\r\n        c *= 2\r\n      }\r\n      if (e + eBias >= 1) {\r\n        value += rt / c\r\n      } else {\r\n        value += rt * Math.pow(2, 1 - eBias)\r\n      }\r\n      if (value * c >= 2) {\r\n        e++\r\n        c /= 2\r\n      }\r\n\r\n      if (e + eBias >= eMax) {\r\n        m = 0\r\n        e = eMax\r\n      } else if (e + eBias >= 1) {\r\n        m = ((value * c) - 1) * Math.pow(2, mLen)\r\n        e = e + eBias\r\n      } else {\r\n        m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\r\n        e = 0\r\n      }\r\n    }\r\n\r\n    for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\r\n\r\n    e = (e << mLen) | m\r\n    eLen += mLen\r\n    for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\r\n\r\n    buffer[offset + i - d] |= s * 128\r\n  }\r\n\r\n  return exports;\r\n});\r\n"]}